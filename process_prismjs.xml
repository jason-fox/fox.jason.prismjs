<?xml version="1.0" encoding="UTF-8"?><!--ant--><!--
  This file is part of the DITA-OT Prism-JS Plug-in project.
  See the accompanying LICENSE file for applicable licenses.
--><project xmlns:if="ant:if" xmlns:unless="ant:unless" xmlns:dita="http://dita-ot.sourceforge.net" name="fox.jason.prismjs">

  <target name="prismjs.css.copy">
    <property name="prismjs.css.file" value="${dita.plugin.fox.jason.prismjs.dir}/resource/style.css"/>
    <loadfile property="prism.css" srcFile="${prismjs.css.file}"/>
    <echo append="true" message="${line.separator}${prism.css}" file="${extend.css.file}"/>
  </target>

  <target name="highlight.check">
     <!-- Only run the Highlight transform for HTML or PDF -->
    <condition property="prismjs.highlightable">
      <or>
        <equals arg1="${out.ext}" arg2=".html"/>
        <isset property="axf.formatter.output-format"/>
        <isset property="fop.formatter.output-format"/>
        <isset property="xep.formatter.output-format"/>
        <!-- add any additional missing transtypes here -->
        <contains string="${transtype}" substring="HTML" casesensitive="no"/>
        <contains string="${transtype}" substring="PDF" casesensitive="no"/>
        <contains string="${transtype}" substring="eclipsehelp" casesensitive="no"/>
      </or>
    </condition>

    <condition property="is.html">
      <equals arg1="${out.ext}" arg2=".html"/>
    </condition>

    <condition property="prismjs.memory">
      <and>
        <equals arg1="${store-type}" arg2="memory"/>
        <isset property="prismjs.highlightable"/>
      </and>
    </condition>

    <dita-ot-echo id="PRSM004W" if:set="prismjs.memory"/>
  </target>


  <!--
    Check if Node is installed.
  -->
  <target name="node.check">
    <!-- For Unix run node as an executable -->

    <exec if:set="prismjs.highlightable" executable="node" dir="${dita.dir}" osfamily="unix" taskname="node"
      resultproperty="node.result" outputproperty="node.out" failonerror="false" failifexecutionfails="false">
      <arg line="-v"/>
    </exec>
    <!-- For Windows run from a DOS command -->
    <exec if:set="prismjs.highlightable" executable="cmd" dir="${dita.dir}" osfamily="windows" taskname="node"
      resultproperty="node.result" outputproperty="node.out" failonerror="false" failifexecutionfails="false">
      <arg value="/C"/>
      <arg value="node -v"/>
    </exec>

    <condition property="node.installed">
      <equals arg1="${node.result}" arg2="0"/>
    </condition>

    <dita-ot-echo if:set="prismjs.highlightable" unless:set="node.installed" id="PRSM003W"/>
    <echo if:set="node.installed"  taskname="node" level="info" message="${node.out}"/>
  </target>


  <target name="highlight.init" >
    <typedef file="${dita.plugin.fox.jason.prismjs.dir}/resource/antlib.xml"/>
    <property name="prismjs.node.script"  value="${dita.plugin.fox.jason.prismjs.dir}/resource/node-prism.js"/>
    <tempfile deleteonexit="true" destdir="${dita.temp.dir}" property="prismjs.temp.file" suffix=".js"/>
    <copy file="${dita.plugin.fox.jason.prismjs.dir}/resource/prism.js" toFile="${prismjs.temp.file}"/>

    <tempfile deleteonexit="true" destdir="${dita.temp.dir}" property="prismjs.unknown.file" suffix=".txt"/>
    <touch file="${prismjs.unknown.file}"/>

    <property name="prism.component.dir" value="${dita.plugin.fox.jason.prismjs.dir}/resource/components"/>

   
  </target>

  <target name="highlight">
    <dirname property="args.input.dir" file="${args.input}"/>
    <restrict id="prismjs.ditafileset">
      <ditafileset processingRole="normal">
        <excludes format="ditamap"/>
        <excludes format="ditaval"/>
        <excludes format="image"/>
      </ditafileset>
      <and>
        <or>
          <contains text="&lt;codeph" />
          <contains text="&lt;codeblock" />
        </or>
        <not>
          <name name="${args.input.dir}/**/*" />
        </not>
      </and>
    </restrict>
    <pathconvert property="prismjs.ditafiles" refid="prismjs.ditafileset" pathsep=";">
      <map from="file:" to=""/>
    </pathconvert>

    <iterate-ditafiles if:set="prismjs.highlightable" list="${prismjs.ditafiles}" unless:blank="${prismjs.ditafiles}">
      <highlight-dita-file file="${element}" />
    </iterate-ditafiles>
  </target>

  <target name="prismjs" depends="highlight.init, highlight"/>

  <target name="prismjs.init" depends="highlight.check, node.check" />

</project>